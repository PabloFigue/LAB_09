

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Apr 24 20:14:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211                           
   212                           	psect	idataCOMMON
   213     0109                     __pidataCOMMON:
   214                           
   215                           ;initializer for _address
   216     0109  3404               	retlw	4
   217     0005                     _PORTA	set	5
   218     0008                     _PORTD	set	8
   219     0009                     _PORTE	set	9
   220     0006                     _PORTBbits	set	6
   221     000B                     _INTCONbits	set	11
   222     0007                     _PORTC	set	7
   223     001E                     _ADRESH	set	30
   224     001F                     _ADCON0bits	set	31
   225     000C                     _PIR1bits	set	12
   226     0066                     _ADIF	set	102
   227     009F                     _ADCON1bits	set	159
   228     0085                     _TRISA	set	133
   229     008C                     _PIE1bits	set	140
   230     008F                     _OSCCONbits	set	143
   231     0096                     _IOCB	set	150
   232     0095                     _WPUB	set	149
   233     0081                     _OPTION_REGbits	set	129
   234     0089                     _TRISE	set	137
   235     0088                     _TRISD	set	136
   236     0087                     _TRISC	set	135
   237     0086                     _TRISB	set	134
   238     010C                     _EEDAT	set	268
   239     010D                     _EEADR	set	269
   240     018D                     _EECON2	set	397
   241     018C                     _EECON1bits	set	396
   242     0188                     _ANSEL	set	392
   243     0189                     _ANSELH	set	393
   244     0C60                     _RD	set	3168
   245     0C61                     _WR	set	3169
   246                           
   247                           	psect	cinit
   248     000F                     start_initialization:	
   249                           ; #config settings
   250                           
   251     000F                     __initialization:
   252                           
   253                           ; Initialize objects allocated to COMMON
   254     000F  120A  118A  2109  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   255     0014  00F8               	movwf	__pdataCOMMON& (0+127)
   256                           
   257                           ; Clear objects allocated to COMMON
   258     0015  01F5               	clrf	__pbssCOMMON& (0+127)
   259     0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   260     0017  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   261     0018                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264     0018                     __end_of__initialization:
   265     0018  0183               	clrf	3
   266     0019  120A  118A  289F   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269     0075                     __pbssCOMMON:
   270     0075                     _ValPot:
   271     0075                     	ds	1
   272     0076                     _sleeping:
   273     0076                     	ds	1
   274     0077                     _cont_sleep:
   275     0077                     	ds	1
   276                           
   277                           	psect	dataCOMMON
   278     0078                     __pdataCOMMON:
   279     0078                     _address:
   280     0078                     	ds	1
   281                           
   282                           	psect	cstackCOMMON
   283     0070                     __pcstackCOMMON:
   284     0070                     ?_write_EEPROM:
   285     0070                     ?_setup:	
   286                           ; 1 bytes @ 0x0
   287                           
   288     0070                     ?_read_EEPROM:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_isr:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     write_EEPROM@data:	
   298                           ; 1 bytes @ 0x0
   299                           
   300                           
   301                           ; 1 bytes @ 0x0
   302     0070                     	ds	1
   303     0071                     ??_write_EEPROM:
   304     0071                     write_EEPROM@address:	
   305                           ; 1 bytes @ 0x1
   306                           
   307                           
   308                           ; 1 bytes @ 0x1
   309     0071                     	ds	1
   310     0072                     ??_isr:
   311                           
   312                           ; 1 bytes @ 0x2
   313     0072                     	ds	3
   314     0075                     ??_read_EEPROM:
   315                           
   316                           	psect	cstackBANK0
   317     0020                     __pcstackBANK0:	
   318                           ; 1 bytes @ 0x5
   319                           
   320     0020                     ??_setup:
   321     0020                     read_EEPROM@address:	
   322                           ; 1 bytes @ 0x0
   323                           
   324                           
   325                           ; 1 bytes @ 0x0
   326     0020                     	ds	2
   327     0022                     ??_main:
   328                           
   329                           ; 1 bytes @ 0x2
   330     0022                     	ds	1
   331                           
   332                           	psect	maintext
   333     009F                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 92 in file "LAB_09.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       1       0       0       0
   356 ;;      Totals:         0       1       0       0       0
   357 ;;Total ram usage:        1 bytes
   358 ;; Hardware stack levels required when called: 3
   359 ;; This function calls:
   360 ;;		_read_EEPROM
   361 ;;		_setup
   362 ;; This function is called by:
   363 ;;		Startup code after reset
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367     009F                     _main:	
   368                           ;psect for function _main
   369                           
   370     009F                     l947:	
   371                           ;incstack = 0
   372                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   373                           
   374                           
   375                           ;LAB_09.c: 93:     setup();
   376     009F  120A  118A  201C  120A  118A  	fcall	_setup
   377     00A4                     l949:
   378                           
   379                           ;LAB_09.c: 97:         if (sleeping == 0){
   380     00A4  0876               	movf	_sleeping,w
   381     00A5  1D03               	btfss	3,2
   382     00A6  28A8               	goto	u221
   383     00A7  28A9               	goto	u220
   384     00A8                     u221:
   385     00A8  28C6               	goto	l963
   386     00A9                     u220:
   387     00A9                     l951:
   388                           
   389                           ;LAB_09.c: 98:             if (ADCON0bits.GO == 0){
   390     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   391     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   392     00AB  189F               	btfsc	31,1	;volatile
   393     00AC  28AE               	goto	u231
   394     00AD  28AF               	goto	u230
   395     00AE                     u231:
   396     00AE  28B7               	goto	l94
   397     00AF                     u230:
   398     00AF                     l953:
   399                           
   400                           ;LAB_09.c: 99:                 ADCON0bits.GO = 1;
   401     00AF  149F               	bsf	31,1	;volatile
   402     00B0                     l955:
   403                           
   404                           ;LAB_09.c: 100:                 _delay((unsigned long)((40)*(8000000/4000000.0)));
   405     00B0  3019               	movlw	25
   406     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   407     00B2  1303               	bcf	3,6	;RP1=0, select bank0
   408     00B3  00A2               	movwf	??_main
   409     00B4                     u257:
   410     00B4  0BA2               	decfsz	??_main,f
   411     00B5  28B4               	goto	u257
   412     00B6  28B7               	nop2
   413     00B7                     l94:	
   414                           ;LAB_09.c: 101:             }
   415                           
   416                           
   417                           ;LAB_09.c: 102:             PORTE = cont_sleep;
   418     00B7  0877               	movf	_cont_sleep,w
   419     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   420     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   421     00BA  0089               	movwf	9	;volatile
   422     00BB                     l957:
   423                           
   424                           ;LAB_09.c: 103:             cont_sleep ++;
   425     00BB  3001               	movlw	1
   426     00BC  00A2               	movwf	??_main
   427     00BD  0822               	movf	??_main,w
   428     00BE  07F7               	addwf	_cont_sleep,f
   429     00BF                     l959:
   430                           
   431                           ;LAB_09.c: 104:             if (cont_sleep>7)
   432     00BF  3008               	movlw	8
   433     00C0  0277               	subwf	_cont_sleep,w
   434     00C1  1C03               	skipc
   435     00C2  28C4               	goto	u241
   436     00C3  28C5               	goto	u240
   437     00C4                     u241:
   438     00C4  28C6               	goto	l963
   439     00C5                     u240:
   440     00C5                     l961:
   441                           
   442                           ;LAB_09.c: 105:             cont_sleep = 0;
   443     00C5  01F7               	clrf	_cont_sleep
   444     00C6                     l963:
   445                           
   446                           ;LAB_09.c: 107:         PORTD = read_EEPROM(address);
   447     00C6  0878               	movf	_address,w
   448     00C7  120A  118A  20D3  120A  118A  	fcall	_read_EEPROM
   449     00CC  1283               	bcf	3,5	;RP0=0, select bank0
   450     00CD  1303               	bcf	3,6	;RP1=0, select bank0
   451     00CE  0088               	movwf	8	;volatile
   452     00CF  28A4               	goto	l949
   453     00D0  120A  118A  280C   	ljmp	start
   454     00D3                     __end_of_main:
   455                           
   456                           	psect	text1
   457     001C                     __ptext1:	
   458 ;; *************** function _setup *****************
   459 ;; Defined at:
   460 ;;		line 114 in file "LAB_09.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   474 ;;      Params:         0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0
   476 ;;      Temps:          0       2       0       0       0
   477 ;;      Totals:         0       2       0       0       0
   478 ;;Total ram usage:        2 bytes
   479 ;; Hardware stack levels used: 1
   480 ;; Hardware stack levels required when called: 2
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		_main
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488     001C                     _setup:	
   489                           ;psect for function _setup
   490                           
   491     001C                     l877:	
   492                           ;incstack = 0
   493                           ; Regs used in _setup: [wreg+status,2+status,0]
   494                           
   495                           
   496                           ;LAB_09.c: 117:     ANSELH = 0;
   497     001C  1683               	bsf	3,5	;RP0=1, select bank3
   498     001D  1703               	bsf	3,6	;RP1=1, select bank3
   499     001E  0189               	clrf	9	;volatile
   500     001F                     l879:
   501                           
   502                           ;LAB_09.c: 119:     TRISB = 0b111;
   503     001F  3007               	movlw	7
   504     0020  1683               	bsf	3,5	;RP0=1, select bank1
   505     0021  1303               	bcf	3,6	;RP1=0, select bank1
   506     0022  0086               	movwf	6	;volatile
   507     0023                     l881:
   508                           
   509                           ;LAB_09.c: 120:     TRISC = 0;
   510     0023  0187               	clrf	7	;volatile
   511     0024                     l883:
   512                           
   513                           ;LAB_09.c: 121:     TRISD = 0;
   514     0024  0188               	clrf	8	;volatile
   515     0025                     l885:
   516                           
   517                           ;LAB_09.c: 122:     TRISE = 0;
   518     0025  0189               	clrf	9	;volatile
   519     0026                     l887:
   520                           
   521                           ;LAB_09.c: 124:     PORTA = 0;
   522     0026  1283               	bcf	3,5	;RP0=0, select bank0
   523     0027  1303               	bcf	3,6	;RP1=0, select bank0
   524     0028  0185               	clrf	5	;volatile
   525     0029                     l889:
   526                           
   527                           ;LAB_09.c: 125:     PORTC = 0;
   528     0029  0187               	clrf	7	;volatile
   529     002A                     l891:
   530                           
   531                           ;LAB_09.c: 126:     PORTD = 0;
   532     002A  0188               	clrf	8	;volatile
   533     002B                     l893:
   534                           
   535                           ;LAB_09.c: 127:     PORTE = 0;
   536     002B  0189               	clrf	9	;volatile
   537     002C                     l895:
   538                           
   539                           ;LAB_09.c: 130:     OPTION_REGbits.nRBPU = 0;
   540     002C  1683               	bsf	3,5	;RP0=1, select bank1
   541     002D  1303               	bcf	3,6	;RP1=0, select bank1
   542     002E  1381               	bcf	1,7	;volatile
   543                           
   544                           ;LAB_09.c: 131:     WPUB = 0b111;
   545     002F  3007               	movlw	7
   546     0030  0095               	movwf	21	;volatile
   547                           
   548                           ;LAB_09.c: 132:     IOCB = 0b111;
   549     0031  3007               	movlw	7
   550     0032  0096               	movwf	22	;volatile
   551     0033                     l897:
   552                           
   553                           ;LAB_09.c: 134:     OSCCONbits.IRCF = 0b111;
   554     0033  3070               	movlw	112
   555     0034  048F               	iorwf	15,f	;volatile
   556     0035                     l899:
   557                           
   558                           ;LAB_09.c: 135:     OSCCONbits.SCS = 1;
   559     0035  140F               	bsf	15,0	;volatile
   560     0036                     l901:
   561                           
   562                           ;LAB_09.c: 138:     PIR1bits.ADIF = 0;
   563     0036  1283               	bcf	3,5	;RP0=0, select bank0
   564     0037  1303               	bcf	3,6	;RP1=0, select bank0
   565     0038  130C               	bcf	12,6	;volatile
   566     0039                     l903:
   567                           
   568                           ;LAB_09.c: 139:     PIE1bits.ADIE = 1;
   569     0039  1683               	bsf	3,5	;RP0=1, select bank1
   570     003A  1303               	bcf	3,6	;RP1=0, select bank1
   571     003B  170C               	bsf	12,6	;volatile
   572     003C                     l905:
   573                           
   574                           ;LAB_09.c: 140:     INTCONbits.GIE = 1;
   575     003C  178B               	bsf	11,7	;volatile
   576     003D                     l907:
   577                           
   578                           ;LAB_09.c: 141:     INTCONbits.PEIE = 1;
   579     003D  170B               	bsf	11,6	;volatile
   580     003E                     l909:
   581                           
   582                           ;LAB_09.c: 142:     INTCONbits.RBIF = 0;
   583     003E  100B               	bcf	11,0	;volatile
   584     003F                     l911:
   585                           
   586                           ;LAB_09.c: 143:     INTCONbits.RBIE = 1;
   587     003F  158B               	bsf	11,3	;volatile
   588     0040                     l913:
   589                           
   590                           ;LAB_09.c: 146:     ANSEL = 0b00000001;
   591     0040  3001               	movlw	1
   592     0041  1683               	bsf	3,5	;RP0=1, select bank3
   593     0042  1703               	bsf	3,6	;RP1=1, select bank3
   594     0043  0088               	movwf	8	;volatile
   595     0044                     l915:
   596                           
   597                           ;LAB_09.c: 147:     TRISA = 0b00000001;
   598     0044  3001               	movlw	1
   599     0045  1683               	bsf	3,5	;RP0=1, select bank1
   600     0046  1303               	bcf	3,6	;RP1=0, select bank1
   601     0047  0085               	movwf	5	;volatile
   602     0048                     l917:
   603                           
   604                           ;LAB_09.c: 148:     ADCON0bits.ADCS = 0b10;
   605     0048  1283               	bcf	3,5	;RP0=0, select bank0
   606     0049  1303               	bcf	3,6	;RP1=0, select bank0
   607     004A  081F               	movf	31,w	;volatile
   608     004B  393F               	andlw	-193
   609     004C  3880               	iorlw	128
   610     004D  009F               	movwf	31	;volatile
   611     004E                     l919:
   612                           
   613                           ;LAB_09.c: 149:     ADCON0bits.CHS = 0b0000;
   614     004E  30C3               	movlw	-61
   615     004F  059F               	andwf	31,f	;volatile
   616     0050                     l921:
   617                           
   618                           ;LAB_09.c: 150:     ADCON1bits.ADFM = 0;
   619     0050  1683               	bsf	3,5	;RP0=1, select bank1
   620     0051  1303               	bcf	3,6	;RP1=0, select bank1
   621     0052  139F               	bcf	31,7	;volatile
   622     0053                     l923:
   623                           
   624                           ;LAB_09.c: 151:     ADCON1bits.VCFG0 = 0;
   625     0053  121F               	bcf	31,4	;volatile
   626     0054                     l925:
   627                           
   628                           ;LAB_09.c: 152:     ADCON1bits.VCFG1 = 0;
   629     0054  129F               	bcf	31,5	;volatile
   630     0055                     l927:
   631                           
   632                           ;LAB_09.c: 153:     ADCON0bits.ADON = 1;
   633     0055  1283               	bcf	3,5	;RP0=0, select bank0
   634     0056  1303               	bcf	3,6	;RP1=0, select bank0
   635     0057  141F               	bsf	31,0	;volatile
   636     0058                     l929:
   637                           
   638                           ;LAB_09.c: 154:     ADIF = 0;
   639     0058  130C               	bcf	12,6	;volatile
   640     0059                     l931:
   641                           
   642                           ;LAB_09.c: 155:     _delay((unsigned long)((5)*(8000000/4000.0)));
   643     0059  300D               	movlw	13
   644     005A  1283               	bcf	3,5	;RP0=0, select bank0
   645     005B  1303               	bcf	3,6	;RP1=0, select bank0
   646     005C  00A1               	movwf	??_setup+1
   647     005D  30FB               	movlw	251
   648     005E  00A0               	movwf	??_setup
   649     005F                     u267:
   650     005F  0BA0               	decfsz	??_setup,f
   651     0060  285F               	goto	u267
   652     0061  0BA1               	decfsz	??_setup+1,f
   653     0062  285F               	goto	u267
   654     0063                     l101:
   655     0063  0008               	return
   656     0064                     __end_of_setup:
   657                           
   658                           	psect	text2
   659     00D3                     __ptext2:	
   660 ;; *************** function _read_EEPROM *****************
   661 ;; Defined at:
   662 ;;		line 181 in file "LAB_09.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  address         1    wreg     unsigned char 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  address         1    0[BANK0 ] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      unsigned char 
   669 ;; Registers used:
   670 ;;		wreg
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       1       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       1       0       0       0
   680 ;;Total ram usage:        1 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 2
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690     00D3                     _read_EEPROM:	
   691                           ;psect for function _read_EEPROM
   692                           
   693                           
   694                           ;incstack = 0
   695                           ; Regs used in _read_EEPROM: [wreg]
   696                           ;read_EEPROM@address stored from wreg
   697     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   698     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   699     00D5  00A0               	movwf	read_EEPROM@address
   700     00D6                     l935:
   701     00D6                     l110:	
   702                           ;LAB_09.c: 182:     while (WR||RD){;}
   703                           
   704     00D6  1683               	bsf	3,5	;RP0=1, select bank3
   705     00D7  1703               	bsf	3,6	;RP1=1, select bank3
   706     00D8  188C               	btfsc	12,1	;volsfr
   707     00D9  28DB               	goto	u201
   708     00DA  28DC               	goto	u200
   709     00DB                     u201:
   710     00DB  28D6               	goto	l110
   711     00DC                     u200:
   712     00DC                     l937:
   713     00DC  180C               	btfsc	12,0	;volsfr
   714     00DD  28DF               	goto	u211
   715     00DE  28E0               	goto	u210
   716     00DF                     u211:
   717     00DF  28D6               	goto	l110
   718     00E0                     u210:
   719     00E0                     l939:
   720                           
   721                           ;LAB_09.c: 183:     EEADR = address ;
   722     00E0  1283               	bcf	3,5	;RP0=0, select bank0
   723     00E1  1303               	bcf	3,6	;RP1=0, select bank0
   724     00E2  0820               	movf	read_EEPROM@address,w
   725     00E3  1283               	bcf	3,5	;RP0=0, select bank2
   726     00E4  1703               	bsf	3,6	;RP1=1, select bank2
   727     00E5  008D               	movwf	13	;volatile
   728     00E6                     l941:
   729                           
   730                           ;LAB_09.c: 184:     EECON1bits.EEPGD = 0;
   731     00E6  1683               	bsf	3,5	;RP0=1, select bank3
   732     00E7  1703               	bsf	3,6	;RP1=1, select bank3
   733     00E8  138C               	bcf	12,7	;volsfr
   734     00E9                     l943:
   735                           
   736                           ;LAB_09.c: 185:     EECON1bits.RD = 1;
   737     00E9  140C               	bsf	12,0	;volsfr
   738                           
   739                           ;LAB_09.c: 186:     return EEDAT;
   740     00EA  1283               	bcf	3,5	;RP0=0, select bank2
   741     00EB  1703               	bsf	3,6	;RP1=1, select bank2
   742     00EC  080C               	movf	12,w	;volatile
   743     00ED                     l113:
   744     00ED  0008               	return
   745     00EE                     __end_of_read_EEPROM:
   746                           
   747                           	psect	text3
   748     0064                     __ptext3:	
   749 ;; *************** function _isr *****************
   750 ;; Defined at:
   751 ;;		line 57 in file "LAB_09.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, pclath, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0
   767 ;;      Temps:          3       0       0       0       0
   768 ;;      Totals:         3       0       0       0       0
   769 ;;Total ram usage:        3 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 1
   772 ;; This function calls:
   773 ;;		_write_EEPROM
   774 ;; This function is called by:
   775 ;;		Interrupt level 1
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     0064                     _isr:	
   780                           ;psect for function _isr
   781                           
   782     0064                     i1l853:
   783                           
   784                           ;LAB_09.c: 59:     if (PIR1bits.ADIF){
   785     0064  1283               	bcf	3,5	;RP0=0, select bank0
   786     0065  1303               	bcf	3,6	;RP1=0, select bank0
   787     0066  1F0C               	btfss	12,6	;volatile
   788     0067  2869               	goto	u14_21
   789     0068  286A               	goto	u14_20
   790     0069                     u14_21:
   791     0069  2878               	goto	i1l861
   792     006A                     u14_20:
   793     006A                     i1l855:
   794                           
   795                           ;LAB_09.c: 60:         if (ADCON0bits.CHS == 0){
   796     006A  0C1F               	rrf	31,w	;volatile
   797     006B  00F2               	movwf	??_isr
   798     006C  0C72               	rrf	??_isr,w
   799     006D  390F               	andlw	15
   800     006E  3A00               	xorlw	0
   801     006F  1D03               	skipz
   802     0070  2872               	goto	u15_21
   803     0071  2873               	goto	u15_20
   804     0072                     u15_21:
   805     0072  2877               	goto	i1l859
   806     0073                     u15_20:
   807     0073                     i1l857:
   808                           
   809                           ;LAB_09.c: 61:             ValPot = ADRESH;
   810     0073  081E               	movf	30,w	;volatile
   811     0074  00F5               	movwf	_ValPot
   812                           
   813                           ;LAB_09.c: 62:             PORTC = ValPot;
   814     0075  0875               	movf	_ValPot,w
   815     0076  0087               	movwf	7	;volatile
   816     0077                     i1l859:
   817                           
   818                           ;LAB_09.c: 64:         PIR1bits.ADIF = 0;
   819     0077  130C               	bcf	12,6	;volatile
   820     0078                     i1l861:
   821                           
   822                           ;LAB_09.c: 68:     if (INTCONbits.RBIF){
   823     0078  1C0B               	btfss	11,0	;volatile
   824     0079  287B               	goto	u16_21
   825     007A  287C               	goto	u16_20
   826     007B                     u16_21:
   827     007B  2898               	goto	i1l87
   828     007C                     u16_20:
   829     007C                     i1l863:
   830                           
   831                           ;LAB_09.c: 69:         if (PORTBbits.RB1 == 0){
   832     007C  1886               	btfsc	6,1	;volatile
   833     007D  287F               	goto	u17_21
   834     007E  2880               	goto	u17_20
   835     007F                     u17_21:
   836     007F  2882               	goto	i1l82
   837     0080                     u17_20:
   838     0080                     i1l865:
   839                           
   840                           ;LAB_09.c: 70:             sleeping = 0;
   841     0080  01F6               	clrf	_sleeping
   842                           
   843                           ;LAB_09.c: 71:         }
   844     0081  2897               	goto	i1l873
   845     0082                     i1l82:	
   846                           ;LAB_09.c: 73:         else if (PORTBbits.RB0 == 0){
   847                           
   848     0082  1806               	btfsc	6,0	;volatile
   849     0083  2885               	goto	u18_21
   850     0084  2886               	goto	u18_20
   851     0085                     u18_21:
   852     0085  288A               	goto	i1l84
   853     0086                     u18_20:
   854     0086                     i1l867:
   855                           
   856                           ;LAB_09.c: 74:             sleeping = 1;
   857     0086  01F6               	clrf	_sleeping
   858     0087  0AF6               	incf	_sleeping,f
   859     0088  0063               	sleep	;# 
   860                           
   861                           ;LAB_09.c: 76:         }
   862     0089  2897               	goto	i1l873
   863     008A                     i1l84:	
   864                           ;LAB_09.c: 78:         else if (PORTBbits.RB2 == 0){
   865                           
   866     008A  1906               	btfsc	6,2	;volatile
   867     008B  288D               	goto	u19_21
   868     008C  288E               	goto	u19_20
   869     008D                     u19_21:
   870     008D  2897               	goto	i1l873
   871     008E                     u19_20:
   872     008E                     i1l869:
   873                           
   874                           ;LAB_09.c: 79:             sleeping = 0 ;
   875     008E  01F6               	clrf	_sleeping
   876     008F                     i1l871:
   877                           
   878                           ;LAB_09.c: 80:             write_EEPROM(address, ValPot);
   879     008F  0875               	movf	_ValPot,w
   880     0090  00F0               	movwf	write_EEPROM@data
   881     0091  0878               	movf	_address,w
   882     0092  120A  118A  20EE  120A  118A  	fcall	_write_EEPROM
   883     0097                     i1l873:
   884                           
   885                           ;LAB_09.c: 82:         INTCONbits.RBIF = 0;
   886     0097  100B               	bcf	11,0	;volatile
   887     0098                     i1l87:
   888     0098  0874               	movf	??_isr+2,w
   889     0099  008A               	movwf	10
   890     009A  0E73               	swapf	??_isr+1,w
   891     009B  0083               	movwf	3
   892     009C  0EFE               	swapf	btemp,f
   893     009D  0E7E               	swapf	btemp,w
   894     009E  0009               	retfie
   895     009F                     __end_of_isr:
   896                           
   897                           	psect	intentry
   898     0004                     __pintentry:	
   899                           ;incstack = 0
   900                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   901                           
   902     0004                     interrupt_function:
   903     007E                     saved_w	set	btemp
   904     0004  00FE               	movwf	btemp
   905     0005  0E03               	swapf	3,w
   906     0006  00F3               	movwf	??_isr+1
   907     0007  080A               	movf	10,w
   908     0008  00F4               	movwf	??_isr+2
   909     0009  120A  118A  2864   	ljmp	_isr
   910                           
   911                           	psect	text4
   912     00EE                     __ptext4:	
   913 ;; *************** function _write_EEPROM *****************
   914 ;; Defined at:
   915 ;;		line 161 in file "LAB_09.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  address         1    wreg     unsigned char 
   918 ;;  data            1    0[COMMON] unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  address         1    1[COMMON] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         1       0       0       0       0
   931 ;;      Locals:         1       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         2       0       0       0       0
   934 ;;Total ram usage:        2 bytes
   935 ;; Hardware stack levels used: 1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_isr
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943     00EE                     _write_EEPROM:	
   944                           ;psect for function _write_EEPROM
   945                           
   946                           
   947                           ;incstack = 0
   948                           ; Regs used in _write_EEPROM: [wreg]
   949                           ;write_EEPROM@address stored from wreg
   950     00EE  00F1               	movwf	write_EEPROM@address
   951     00EF                     i1l835:
   952     00EF                     i1l104:	
   953                           ;LAB_09.c: 162:     while (WR){;}
   954                           
   955     00EF  1683               	bsf	3,5	;RP0=1, select bank3
   956     00F0  1703               	bsf	3,6	;RP1=1, select bank3
   957     00F1  188C               	btfsc	12,1	;volsfr
   958     00F2  28F4               	goto	u13_21
   959     00F3  28F5               	goto	u13_20
   960     00F4                     u13_21:
   961     00F4  28EF               	goto	i1l104
   962     00F5                     u13_20:
   963     00F5                     i1l837:
   964                           
   965                           ;LAB_09.c: 163:     EEADR = address;
   966     00F5  0871               	movf	write_EEPROM@address,w
   967     00F6  1283               	bcf	3,5	;RP0=0, select bank2
   968     00F7  1703               	bsf	3,6	;RP1=1, select bank2
   969     00F8  008D               	movwf	13	;volatile
   970                           
   971                           ;LAB_09.c: 164:     EEDAT = data;
   972     00F9  0870               	movf	write_EEPROM@data,w
   973     00FA  008C               	movwf	12	;volatile
   974     00FB                     i1l839:
   975                           
   976                           ;LAB_09.c: 166:     EECON1bits.EEPGD = 0;
   977     00FB  1683               	bsf	3,5	;RP0=1, select bank3
   978     00FC  1703               	bsf	3,6	;RP1=1, select bank3
   979     00FD  138C               	bcf	12,7	;volsfr
   980     00FE                     i1l841:
   981                           
   982                           ;LAB_09.c: 167:     EECON1bits.WREN = 1;
   983     00FE  150C               	bsf	12,2	;volsfr
   984     00FF                     i1l843:
   985                           
   986                           ;LAB_09.c: 168:     INTCONbits.GIE = 0;
   987     00FF  138B               	bcf	11,7	;volatile
   988                           
   989                           ;LAB_09.c: 171:     EECON2 = 0x55;
   990     0100  3055               	movlw	85
   991     0101  008D               	movwf	13	;volsfr
   992                           
   993                           ;LAB_09.c: 172:     EECON2 = 0xAA;
   994     0102  30AA               	movlw	170
   995     0103  008D               	movwf	13	;volsfr
   996     0104                     i1l845:
   997                           
   998                           ;LAB_09.c: 173:     EECON1bits.WR = 1;
   999     0104  148C               	bsf	12,1	;volsfr
  1000     0105                     i1l847:
  1001                           
  1002                           ;LAB_09.c: 174:     EECON1bits.WREN = 0;
  1003     0105  110C               	bcf	12,2	;volsfr
  1004     0106                     i1l849:
  1005                           
  1006                           ;LAB_09.c: 176:     INTCONbits.RBIF = 0;
  1007     0106  100B               	bcf	11,0	;volatile
  1008     0107                     i1l851:
  1009                           
  1010                           ;LAB_09.c: 177:     INTCONbits.GIE = 1;
  1011     0107  178B               	bsf	11,7	;volatile
  1012     0108                     i1l107:
  1013     0108  0008               	return
  1014     0109                     __end_of_write_EEPROM:
  1015     007E                     btemp	set	126	;btemp
  1016     007E                     wtemp0	set	126
  1017                           
  1018                           	psect	idloc
  1019                           
  1020                           ;Config register IDLOC0 @ 0x2000
  1021                           ;	unspecified, using default values
  1022     2000                     	org	8192
  1023     2000  3FFF               	dw	16383
  1024                           
  1025                           ;Config register IDLOC1 @ 0x2001
  1026                           ;	unspecified, using default values
  1027     2001                     	org	8193
  1028     2001  3FFF               	dw	16383
  1029                           
  1030                           ;Config register IDLOC2 @ 0x2002
  1031                           ;	unspecified, using default values
  1032     2002                     	org	8194
  1033     2002  3FFF               	dw	16383
  1034                           
  1035                           ;Config register IDLOC3 @ 0x2003
  1036                           ;	unspecified, using default values
  1037     2003                     	org	8195
  1038     2003  3FFF               	dw	16383
  1039                           
  1040                           	psect	config
  1041                           
  1042                           ;Config register CONFIG1 @ 0x2007
  1043                           ;	Oscillator Selection bits
  1044                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1045                           ;	Watchdog Timer Enable bit
  1046                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1047                           ;	Power-up Timer Enable bit
  1048                           ;	PWRTE = OFF, PWRT disabled
  1049                           ;	RE3/MCLR pin function select bit
  1050                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1051                           ;	Code Protection bit
  1052                           ;	CP = OFF, Program memory code protection is disabled
  1053                           ;	Data Code Protection bit
  1054                           ;	CPD = OFF, Data memory code protection is disabled
  1055                           ;	Brown Out Reset Selection bits
  1056                           ;	BOREN = OFF, BOR disabled
  1057                           ;	Internal External Switchover bit
  1058                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1059                           ;	Fail-Safe Clock Monitor Enabled bit
  1060                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1061                           ;	Low Voltage Programming Enable bit
  1062                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1063                           ;	In-Circuit Debugger Mode bit
  1064                           ;	DEBUG = 0x1, unprogramme  1065     2007                     	org	8199
  1066     2007  20D4               	dw	8404
  1067                           
  1068                           ;Config register CONFIG2 @ 0x2008
  1069                           ;	Brown-out Reset Selection bit
  1070                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1071                           ;	Flash Program Memory Self Write Enable bits
  1072                           ;	WRT = OFF, Write protection off
  1073     2008                     	org	8200
  1074     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_write_EEPROM

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      22
                                              2 BANK0      1     1      0
                        _read_EEPROM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _read_EEPROM                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0     120
                                              2 COMMON     3     3      0
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (3) _write_EEPROM                                         2     1      1     120
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _read_EEPROM
   _setup

 _isr (ROOT)
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Apr 24 20:14:29 2023

                     l94 00B7                       _RD 0C60                       _WR 0C61  
                    l101 0063                      l110 00D6                      l113 00ED  
                    l901 0036                      l911 003F                      l903 0039  
                    l921 0050                      l913 0040                      l905 003C  
                    l931 0059                      l923 0053                      l915 0044  
                    l907 003D                      l941 00E6                      l925 0054  
                    l917 0048                      l909 003E                      l943 00E9  
                    l935 00D6                      l927 0055                      l919 004E  
                    l951 00A9                      l937 00DC                      l929 0058  
                    l881 0023                      l961 00C5                      l953 00AF  
                    l939 00E0                      l891 002A                      l883 0024  
                    l955 00B0                      l963 00C6                      l947 009F  
                    l893 002B                      l885 0025                      l877 001C  
                    l957 00BB                      l949 00A4                      l895 002C  
                    l887 0026                      l879 001F                      l959 00BF  
                    l897 0033                      l889 0029                      l899 0035  
                    u200 00DC                      u201 00DB                      u210 00E0  
                    u211 00DF                      u220 00A9                      u221 00A8  
                    u230 00AF                      u231 00AE                      u240 00C5  
                    u241 00C4                      u257 00B4                      u267 005F  
                    _isr 0064                     _ADIF 0066                     ?_isr 0070  
                   _IOCB 0096                     i1l82 0082                     i1l84 008A  
                   i1l87 0098                     _WPUB 0095                     _main 009F  
                   btemp 007E                     start 000C             ?_read_EEPROM 0070  
                  ??_isr 0072                    ?_main 0070                    _EEADR 010D  
                  _EEDAT 010C                    _ANSEL 0188                    i1l104 00EF  
                  i1l107 0108                    i1l841 00FE                    i1l851 0107  
                  i1l843 00FF                    i1l835 00EF                    i1l845 0104  
                  i1l837 00F5                    i1l861 0078                    i1l853 0064  
                  i1l847 0105                    i1l839 00FB                    i1l871 008F  
                  i1l863 007C                    i1l855 006A                    i1l849 0106  
                  i1l873 0097                    i1l865 0080                    i1l857 0073  
                  i1l867 0086                    i1l859 0077                    i1l869 008E  
                  u13_20 00F5                    u13_21 00F4                    u14_20 006A  
                  u14_21 0069                    u15_20 0073                    u15_21 0072  
                  u16_20 007C                    u16_21 007B                    u17_20 0080  
                  u17_21 007F                    u18_20 0086                    u18_21 0085  
                  u19_20 008E                    u19_21 008D                    _PORTA 0005  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 001C  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00D3                   ??_main 0022  
           _write_EEPROM 00EE                   _ADRESH 001E                   _EECON2 018D  
                 ?_setup 0070                   _ANSELH 0189                   _ValPot 0075  
           __pdataCOMMON 0078                   saved_w 007E  __end_of__initialization 0018  
         __pcstackCOMMON 0070            __end_of_setup 0064       read_EEPROM@address 0020  
         _OPTION_REGbits 0081         write_EEPROM@data 0070                  ??_setup 0020  
             __pmaintext 009F               __pintentry 0004               _cont_sleep 0077  
                _address 0078                  __ptext1 001C                  __ptext2 00D3  
                __ptext3 0064                  __ptext4 00EE     end_of_initialization 0018  
    write_EEPROM@address 0071                _PORTBbits 0006            __pidataCOMMON 0109  
    start_initialization 000F              __end_of_isr 009F            ??_read_EEPROM 0075  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0020  
    __end_of_read_EEPROM 00EE            ?_write_EEPROM 0070        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F           ??_write_EEPROM 0071               _EECON1bits 018C  
            _read_EEPROM 00D3                 _sleeping 0076               _INTCONbits 000B  
               intlevel1 0000     __end_of_write_EEPROM 0109               _OSCCONbits 008F  
